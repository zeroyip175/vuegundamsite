{"remainingRequest":"/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/node_modules/thread-loader/dist/cjs.js!/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/node_modules/babel-loader/lib/index.js!/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/src/components/BasePagination.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/src/components/BasePagination.vue","mtime":1722857118000},{"path":"/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/babel.config.js","mtime":1722857118000},{"path":"/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/node_modules/cache-loader/dist/cjs.js","mtime":1748250221961},{"path":"/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/node_modules/thread-loader/dist/cjs.js","mtime":1748250221813},{"path":"/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/node_modules/babel-loader/lib/index.js","mtime":1748250221552},{"path":"/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/node_modules/cache-loader/dist/cjs.js","mtime":1748250221961},{"path":"/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/node_modules/vue-loader/lib/index.js","mtime":1748250222061}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nexport default {\n  name: \"base-pagination\",\n  props: {\n    pageCount: {\n      type: Number,\n      default: 0,\n      description: \"Pagination page count. This should be specified in combination with perPage\"\n    },\n    perPage: {\n      type: Number,\n      default: 10,\n      description: \"Pagination per page. Should be specified with total or pageCount\"\n    },\n    total: {\n      type: Number,\n      default: 0,\n      description: \"Can be specified instead of pageCount. The page count in this case will be total/perPage\"\n    },\n    value: {\n      type: Number,\n      default: 1,\n      description: \"Pagination value\"\n    },\n    size: {\n      type: String,\n      default: \"\",\n      description: \"Pagination size\"\n    },\n    align: {\n      type: String,\n      default: \"\",\n      description: \"Pagination alignment (e.g center|start|end)\"\n    }\n  },\n  computed: {\n    totalPages: function totalPages() {\n      if (this.pageCount > 0) return this.pageCount;\n      if (this.total > 0) {\n        return Math.ceil(this.total / this.perPage);\n      }\n      return 1;\n    },\n    pagesToDisplay: function pagesToDisplay() {\n      if (this.totalPages > 0 && this.totalPages < this.defaultPagesToDisplay) {\n        return this.totalPages;\n      }\n      return this.defaultPagesToDisplay;\n    },\n    minPage: function minPage() {\n      if (this.value >= this.pagesToDisplay) {\n        var pagesToAdd = Math.floor(this.pagesToDisplay / 2);\n        var newMaxPage = pagesToAdd + this.value;\n        if (newMaxPage > this.totalPages) {\n          return this.totalPages - this.pagesToDisplay + 1;\n        }\n        return this.value - pagesToAdd;\n      } else {\n        return 1;\n      }\n    },\n    maxPage: function maxPage() {\n      if (this.value >= this.pagesToDisplay) {\n        var pagesToAdd = Math.floor(this.pagesToDisplay / 2);\n        var newMaxPage = pagesToAdd + this.value;\n        if (newMaxPage < this.totalPages) {\n          return newMaxPage;\n        } else {\n          return this.totalPages;\n        }\n      } else {\n        return this.pagesToDisplay;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      defaultPagesToDisplay: 5\n    };\n  },\n  methods: {\n    range: function range(min, max) {\n      var arr = [];\n      for (var i = min; i <= max; i++) {\n        arr.push(i);\n      }\n      return arr;\n    },\n    changePage: function changePage(item) {\n      this.$emit(\"input\", item);\n    },\n    nextPage: function nextPage() {\n      if (this.value < this.totalPages) {\n        this.$emit(\"input\", this.value + 1);\n      }\n    },\n    prevPage: function prevPage() {\n      if (this.value > 1) {\n        this.$emit(\"input\", this.value - 1);\n      }\n    }\n  },\n  watch: {\n    perPage: function perPage() {\n      this.$emit(\"input\", 1);\n    },\n    total: function total() {\n      this.$emit(\"input\", 1);\n    }\n  }\n};",{"version":3,"names":["name","props","pageCount","type","Number","default","description","perPage","total","value","size","String","align","computed","totalPages","Math","ceil","pagesToDisplay","defaultPagesToDisplay","minPage","pagesToAdd","floor","newMaxPage","maxPage","data","methods","range","min","max","arr","i","push","changePage","item","$emit","nextPage","prevPage","watch"],"sources":["src/components/BasePagination.vue"],"sourcesContent":["<template>\n  <ul class=\"pagination\" :class=\"[size && `pagination-${size}`, align && `justify-content-${align}`]\">\n    <li class=\"page-item prev-page\" :class=\"{disabled: value === 1}\">\n      <a class=\"page-link\" aria-label=\"Previous\" @click=\"prevPage\">\n        <span aria-hidden=\"true\"><i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i></span>\n      </a>\n    </li>\n    <li class=\"page-item\" :class=\"{active: value === item}\"\n        :key=\"item\"\n        v-for=\"item in range(minPage, maxPage)\">\n      <a class=\"page-link\" @click=\"changePage(item)\">{{item}}</a>\n    </li>\n    <li class=\"page-item next-page\" :class=\"{disabled: value === totalPages}\">\n      <a class=\"page-link\" aria-label=\"Next\" @click=\"nextPage\">\n        <span aria-hidden=\"true\"><i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i></span>\n      </a>\n    </li>\n  </ul>\n</template>\n<script>\nexport default {\n  name: \"base-pagination\",\n  props: {\n    pageCount: {\n      type: Number,\n      default: 0,\n      description:\n        \"Pagination page count. This should be specified in combination with perPage\"\n    },\n    perPage: {\n      type: Number,\n      default: 10,\n      description:\n        \"Pagination per page. Should be specified with total or pageCount\"\n    },\n    total: {\n      type: Number,\n      default: 0,\n      description:\n        \"Can be specified instead of pageCount. The page count in this case will be total/perPage\"\n    },\n    value: {\n      type: Number,\n      default: 1,\n      description: \"Pagination value\"\n    },\n    size: {\n      type: String,\n      default: \"\",\n      description: \"Pagination size\"\n    },\n    align: {\n      type: String,\n      default: \"\",\n      description: \"Pagination alignment (e.g center|start|end)\"\n    }\n  },\n  computed: {\n    totalPages() {\n      if (this.pageCount > 0) return this.pageCount;\n      if (this.total > 0) {\n        return Math.ceil(this.total / this.perPage);\n      }\n      return 1;\n    },\n    pagesToDisplay() {\n      if (this.totalPages > 0 && this.totalPages < this.defaultPagesToDisplay) {\n        return this.totalPages;\n      }\n      return this.defaultPagesToDisplay;\n    },\n    minPage() {\n      if (this.value >= this.pagesToDisplay) {\n        const pagesToAdd = Math.floor(this.pagesToDisplay / 2);\n        const newMaxPage = pagesToAdd + this.value;\n        if (newMaxPage > this.totalPages) {\n          return this.totalPages - this.pagesToDisplay + 1;\n        }\n        return this.value - pagesToAdd;\n      } else {\n        return 1;\n      }\n    },\n    maxPage() {\n      if (this.value >= this.pagesToDisplay) {\n        const pagesToAdd = Math.floor(this.pagesToDisplay / 2);\n        const newMaxPage = pagesToAdd + this.value;\n        if (newMaxPage < this.totalPages) {\n          return newMaxPage;\n        } else {\n          return this.totalPages;\n        }\n      } else {\n        return this.pagesToDisplay;\n      }\n    }\n  },\n  data() {\n    return {\n      defaultPagesToDisplay: 5\n    };\n  },\n  methods: {\n    range(min, max) {\n      let arr = [];\n      for (let i = min; i <= max; i++) {\n        arr.push(i);\n      }\n      return arr;\n    },\n    changePage(item) {\n      this.$emit(\"input\", item);\n    },\n    nextPage() {\n      if (this.value < this.totalPages) {\n        this.$emit(\"input\", this.value + 1);\n      }\n    },\n    prevPage() {\n      if (this.value > 1) {\n        this.$emit(\"input\", this.value - 1);\n      }\n    }\n  },\n  watch: {\n    perPage() {\n      this.$emit(\"input\", 1);\n    },\n    total() {\n      this.$emit(\"input\", 1);\n    }\n  }\n};\n</script>\n"],"mappings":";AAoBA;EACAA,IAAA;EACAC,KAAA;IACAC,SAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,WAAA,EACA;IACA;IACAC,OAAA;MACAJ,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,WAAA,EACA;IACA;IACAE,KAAA;MACAL,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,WAAA,EACA;IACA;IACAG,KAAA;MACAN,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,WAAA;IACA;IACAI,IAAA;MACAP,IAAA,EAAAQ,MAAA;MACAN,OAAA;MACAC,WAAA;IACA;IACAM,KAAA;MACAT,IAAA,EAAAQ,MAAA;MACAN,OAAA;MACAC,WAAA;IACA;EACA;EACAO,QAAA;IACAC,UAAA,WAAAA,WAAA;MACA,SAAAZ,SAAA,kBAAAA,SAAA;MACA,SAAAM,KAAA;QACA,OAAAO,IAAA,CAAAC,IAAA,MAAAR,KAAA,QAAAD,OAAA;MACA;MACA;IACA;IACAU,cAAA,WAAAA,eAAA;MACA,SAAAH,UAAA,aAAAA,UAAA,QAAAI,qBAAA;QACA,YAAAJ,UAAA;MACA;MACA,YAAAI,qBAAA;IACA;IACAC,OAAA,WAAAA,QAAA;MACA,SAAAV,KAAA,SAAAQ,cAAA;QACA,IAAAG,UAAA,GAAAL,IAAA,CAAAM,KAAA,MAAAJ,cAAA;QACA,IAAAK,UAAA,GAAAF,UAAA,QAAAX,KAAA;QACA,IAAAa,UAAA,QAAAR,UAAA;UACA,YAAAA,UAAA,QAAAG,cAAA;QACA;QACA,YAAAR,KAAA,GAAAW,UAAA;MACA;QACA;MACA;IACA;IACAG,OAAA,WAAAA,QAAA;MACA,SAAAd,KAAA,SAAAQ,cAAA;QACA,IAAAG,UAAA,GAAAL,IAAA,CAAAM,KAAA,MAAAJ,cAAA;QACA,IAAAK,UAAA,GAAAF,UAAA,QAAAX,KAAA;QACA,IAAAa,UAAA,QAAAR,UAAA;UACA,OAAAQ,UAAA;QACA;UACA,YAAAR,UAAA;QACA;MACA;QACA,YAAAG,cAAA;MACA;IACA;EACA;EACAO,IAAA,WAAAA,KAAA;IACA;MACAN,qBAAA;IACA;EACA;EACAO,OAAA;IACAC,KAAA,WAAAA,MAAAC,GAAA,EAAAC,GAAA;MACA,IAAAC,GAAA;MACA,SAAAC,CAAA,GAAAH,GAAA,EAAAG,CAAA,IAAAF,GAAA,EAAAE,CAAA;QACAD,GAAA,CAAAE,IAAA,CAAAD,CAAA;MACA;MACA,OAAAD,GAAA;IACA;IACAG,UAAA,WAAAA,WAAAC,IAAA;MACA,KAAAC,KAAA,UAAAD,IAAA;IACA;IACAE,QAAA,WAAAA,SAAA;MACA,SAAA1B,KAAA,QAAAK,UAAA;QACA,KAAAoB,KAAA,eAAAzB,KAAA;MACA;IACA;IACA2B,QAAA,WAAAA,SAAA;MACA,SAAA3B,KAAA;QACA,KAAAyB,KAAA,eAAAzB,KAAA;MACA;IACA;EACA;EACA4B,KAAA;IACA9B,OAAA,WAAAA,QAAA;MACA,KAAA2B,KAAA;IACA;IACA1B,KAAA,WAAAA,MAAA;MACA,KAAA0B,KAAA;IACA;EACA;AACA","ignoreList":[]}]}