{"remainingRequest":"/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/node_modules/babel-loader/lib/index.js!/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/src/registerServiceWorker.js","dependencies":[{"path":"/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/src/registerServiceWorker.js","mtime":1722857118000},{"path":"/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/babel.config.js","mtime":1722857118000},{"path":"/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/node_modules/cache-loader/dist/cjs.js","mtime":1748250221961},{"path":"/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/node_modules/babel-loader/lib/index.js","mtime":1748250221552},{"path":"/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/node_modules/eslint-loader/index.js","mtime":1748250221896}],"contextDependencies":[],"result":["/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\nif (process.env.NODE_ENV === 'production') {\n  register(\"\".concat(process.env.BASE_URL, \"service-worker.js\"), {\n    ready: function ready() {\n      console.log('App is being served from cache by a service worker.\\n' + 'For more details, visit https://goo.gl/AFskqB');\n    },\n    registered: function registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached: function cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound: function updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated: function updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline: function offline() {\n      console.log('No internet connection found. App is running in offline mode.');\n    },\n    error: function error(_error) {\n      console.error('Error during service worker registration:', _error);\n    }\n  });\n}",{"version":3,"names":["register","process","env","NODE_ENV","concat","BASE_URL","ready","console","log","registered","cached","updatefound","updated","offline","error"],"sources":["/Users/cashcow/Documents/GitHub/vue-argon-design-system-master/src/registerServiceWorker.js"],"sourcesContent":["/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n"],"mappings":"AAAA;;AAEA,SAASA,QAAQ,QAAQ,yBAAyB;AAElD,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCH,QAAQ,IAAAI,MAAA,CAAIH,OAAO,CAACC,GAAG,CAACG,QAAQ,wBAAqB;IACnDC,KAAK,WAALA,KAAKA,CAAA,EAAI;MACPC,OAAO,CAACC,GAAG,CACT,uDAAuD,GACvD,+CACF,CAAC;IACH,CAAC;IACDC,UAAU,WAAVA,UAAUA,CAAA,EAAI;MACZF,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IACpD,CAAC;IACDE,MAAM,WAANA,MAAMA,CAAA,EAAI;MACRH,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;IACzD,CAAC;IACDG,WAAW,WAAXA,WAAWA,CAAA,EAAI;MACbJ,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C,CAAC;IACDI,OAAO,WAAPA,OAAOA,CAAA,EAAI;MACTL,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;IAC1D,CAAC;IACDK,OAAO,WAAPA,OAAOA,CAAA,EAAI;MACTN,OAAO,CAACC,GAAG,CAAC,+DAA+D,CAAC;IAC9E,CAAC;IACDM,KAAK,WAALA,KAAKA,CAAEA,MAAK,EAAE;MACZP,OAAO,CAACO,KAAK,CAAC,2CAA2C,EAAEA,MAAK,CAAC;IACnE;EACF,CAAC,CAAC;AACJ","ignoreList":[]}]}