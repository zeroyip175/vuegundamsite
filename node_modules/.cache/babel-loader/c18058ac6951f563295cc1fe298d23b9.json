{"remainingRequest":"/Users/cashcow/Documents/GitHub/vuegundamsite/node_modules/babel-loader/lib/index.js!/Users/cashcow/Documents/GitHub/vuegundamsite/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cashcow/Documents/GitHub/vuegundamsite/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cashcow/Documents/GitHub/vuegundamsite/src/components/BaseButton.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/cashcow/Documents/GitHub/vuegundamsite/src/components/BaseButton.vue","mtime":1722857118000},{"path":"/Users/cashcow/Documents/GitHub/vuegundamsite/babel.config.js","mtime":1722857118000},{"path":"/Users/cashcow/Documents/GitHub/vuegundamsite/node_modules/cache-loader/dist/cjs.js","mtime":1748250221000},{"path":"/Users/cashcow/Documents/GitHub/vuegundamsite/node_modules/babel-loader/lib/index.js","mtime":1748250221000},{"path":"/Users/cashcow/Documents/GitHub/vuegundamsite/node_modules/cache-loader/dist/cjs.js","mtime":1748250221000},{"path":"/Users/cashcow/Documents/GitHub/vuegundamsite/node_modules/vue-loader/lib/index.js","mtime":1748250222000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/cashcow/Documents/GitHub/vuegundamsite/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nexport default {\n  name: \"base-button\",\n  props: {\n    tag: {\n      type: String,\n      default: \"button\",\n      description: \"Button tag (default -> button)\"\n    },\n    type: {\n      type: String,\n      default: \"default\",\n      description: \"Button type (e,g primary, danger etc)\"\n    },\n    size: {\n      type: String,\n      default: \"\",\n      description: \"Button size lg|sm\"\n    },\n    textColor: {\n      type: String,\n      default: \"\",\n      description: \"Button text color (e.g primary, danger etc)\"\n    },\n    nativeType: {\n      type: String,\n      default: \"button\",\n      description: \"Button native type (e.g submit,button etc)\"\n    },\n    icon: {\n      type: String,\n      default: \"\",\n      description: \"Button icon\"\n    },\n    text: {\n      type: String,\n      default: \"\",\n      description: \"Button text in case not provided via default slot\"\n    },\n    outline: {\n      type: Boolean,\n      default: false,\n      description: \"Whether button style is outline\"\n    },\n    rounded: {\n      type: Boolean,\n      default: false,\n      description: \"Whether button style is rounded\"\n    },\n    iconOnly: {\n      type: Boolean,\n      default: false,\n      description: \"Whether button contains only an icon\"\n    },\n    block: {\n      type: Boolean,\n      default: false,\n      description: \"Whether button is of block type\"\n    }\n  },\n  computed: {\n    classes: function classes() {\n      var btnClasses = [{\n        \"btn-block\": this.block\n      }, {\n        \"rounded-circle\": this.rounded\n      }, {\n        \"btn-icon-only\": this.iconOnly\n      }, _defineProperty({}, \"text-\".concat(this.textColor), this.textColor), {\n        \"btn-icon\": this.icon || this.$slots.icon\n      }, this.type && !this.outline ? \"btn-\".concat(this.type) : \"\", this.outline ? \"btn-outline-\".concat(this.type) : \"\"];\n      if (this.size) {\n        btnClasses.push(\"btn-\".concat(this.size));\n      }\n      return btnClasses;\n    }\n  },\n  methods: {\n    handleClick: function handleClick(evt) {\n      this.$emit(\"click\", evt);\n    }\n  }\n};",{"version":3,"names":["name","props","tag","type","String","default","description","size","textColor","nativeType","icon","text","outline","Boolean","rounded","iconOnly","block","computed","classes","btnClasses","_defineProperty","concat","$slots","push","methods","handleClick","evt","$emit"],"sources":["src/components/BaseButton.vue"],"sourcesContent":["<template>\n    <component :is=\"tag\"\n               :type=\"tag === 'button' ? nativeType: ''\"\n               @click=\"handleClick\"\n               class=\"btn\"\n               :class=\"classes\">\n    <span class=\"btn-inner--icon\" v-if=\"$slots.icon || icon && $slots.default\">\n      <slot name=\"icon\">\n        <i :class=\"icon\"></i>\n      </slot>\n    </span>\n        <i v-if=\"!$slots.default\" :class=\"icon\"></i>\n        <span class=\"btn-inner--text\" v-if=\"$slots.icon || icon && $slots.default\">\n          <slot>\n            {{text}}\n          </slot>\n    </span>\n        <slot v-if=\"!$slots.icon && !icon\"></slot>\n    </component>\n</template>\n<script>\nexport default {\n  name: \"base-button\",\n  props: {\n    tag: {\n      type: String,\n      default: \"button\",\n      description: \"Button tag (default -> button)\"\n    },\n    type: {\n      type: String,\n      default: \"default\",\n      description: \"Button type (e,g primary, danger etc)\"\n    },\n    size: {\n      type: String,\n      default: \"\",\n      description: \"Button size lg|sm\"\n    },\n    textColor: {\n      type: String,\n      default: \"\",\n      description: \"Button text color (e.g primary, danger etc)\"\n    },\n    nativeType: {\n      type: String,\n      default: \"button\",\n      description: \"Button native type (e.g submit,button etc)\"\n    },\n    icon: {\n      type: String,\n      default: \"\",\n      description: \"Button icon\"\n    },\n    text: {\n      type: String,\n      default: \"\",\n      description: \"Button text in case not provided via default slot\"\n    },\n    outline: {\n      type: Boolean,\n      default: false,\n      description: \"Whether button style is outline\"\n    },\n    rounded: {\n      type: Boolean,\n      default: false,\n      description: \"Whether button style is rounded\"\n    },\n    iconOnly: {\n      type: Boolean,\n      default: false,\n      description: \"Whether button contains only an icon\"\n    },\n    block: {\n      type: Boolean,\n      default: false,\n      description: \"Whether button is of block type\"\n    }\n  },\n  computed: {\n    classes() {\n      let btnClasses = [\n        { \"btn-block\": this.block },\n        { \"rounded-circle\": this.rounded },\n        { \"btn-icon-only\": this.iconOnly },\n        { [`text-${this.textColor}`]: this.textColor },\n        { \"btn-icon\": this.icon || this.$slots.icon },\n        this.type && !this.outline ? `btn-${this.type}` : \"\",\n        this.outline ? `btn-outline-${this.type}` : \"\"\n      ];\n      if (this.size) {\n        btnClasses.push(`btn-${this.size}`);\n      }\n      return btnClasses;\n    }\n  },\n  methods: {\n    handleClick(evt) {\n      this.$emit(\"click\", evt);\n    }\n  }\n};\n</script>\n<style>\n</style>\n"],"mappings":";AAqBA;EACAA,IAAA;EACAC,KAAA;IACAC,GAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,WAAA;IACA;IACAH,IAAA;MACAA,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,WAAA;IACA;IACAC,IAAA;MACAJ,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,WAAA;IACA;IACAE,SAAA;MACAL,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,WAAA;IACA;IACAG,UAAA;MACAN,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,WAAA;IACA;IACAI,IAAA;MACAP,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,WAAA;IACA;IACAK,IAAA;MACAR,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,WAAA;IACA;IACAM,OAAA;MACAT,IAAA,EAAAU,OAAA;MACAR,OAAA;MACAC,WAAA;IACA;IACAQ,OAAA;MACAX,IAAA,EAAAU,OAAA;MACAR,OAAA;MACAC,WAAA;IACA;IACAS,QAAA;MACAZ,IAAA,EAAAU,OAAA;MACAR,OAAA;MACAC,WAAA;IACA;IACAU,KAAA;MACAb,IAAA,EAAAU,OAAA;MACAR,OAAA;MACAC,WAAA;IACA;EACA;EACAW,QAAA;IACAC,OAAA,WAAAA,QAAA;MACA,IAAAC,UAAA,IACA;QAAA,kBAAAH;MAAA,GACA;QAAA,uBAAAF;MAAA,GACA;QAAA,sBAAAC;MAAA,GAAAK,eAAA,aAAAC,MAAA,CACA,KAAAb,SAAA,QAAAA,SAAA,GACA;QAAA,iBAAAE,IAAA,SAAAY,MAAA,CAAAZ;MAAA,GACA,KAAAP,IAAA,UAAAS,OAAA,UAAAS,MAAA,MAAAlB,IAAA,QACA,KAAAS,OAAA,kBAAAS,MAAA,MAAAlB,IAAA,OACA;MACA,SAAAI,IAAA;QACAY,UAAA,CAAAI,IAAA,QAAAF,MAAA,MAAAd,IAAA;MACA;MACA,OAAAY,UAAA;IACA;EACA;EACAK,OAAA;IACAC,WAAA,WAAAA,YAAAC,GAAA;MACA,KAAAC,KAAA,UAAAD,GAAA;IACA;EACA;AACA","ignoreList":[]}]}